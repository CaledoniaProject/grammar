// ### [ Helper productions ] ##################################################

OptLinkage
	: empty
	| Linkage
;

// From spec and src of v4.0.
//
// ref: http://llvm.org/docs/LangRef.html#linkage
Linkage
	: "appending"
	| "available_externally"
	| "common"
	| "internal"
	| "linkonce"
	| "linkonce_odr"
	| "private"
	| "weak"
	| "weak_odr"
;

OptExternLinkage
	: empty
	| ExternLinkage
;

// From spec and src of v4.0.
//
// ref: http://llvm.org/docs/LangRef.html#linkage
ExternLinkage
	: "extern_weak"
	| "external"
;

OptUnnamedAddr
	: empty
	| UnnamedAddr
;

UnnamedAddr
	: "local_unnamed_addr"
	| "unnamed_addr"
;

OptCommaAlign
	: empty
	| "," Align
;

OptAlign
	: empty
	| Align
;

Align
	: "align" int_lit
;

ParamAttrs
	: empty
	| ParamAttrList
;

ParamAttrList
	: ParamAttr
	| ParamAttrList ParamAttr
;

// From spec and src of v4.0.
//
// ref: http://llvm.org/docs/LangRef.html#parameter-attributes
ParamAttr
	: string_lit
	| string_lit "=" string_lit
	| Align
	| "byval"
	| "dereferenceable" "(" int_lit ")"
	| "dereferenceable_or_null" "(" int_lit ")"
	| "inalloca"
	| "inreg"
	| "nest"
	| "noalias"
	| "nocapture"
	| "nonnull"
	| "readnone" // NOTE: accepted by lli but not part of spec in v4.0
	| "readonly" // NOTE: accepted by lli but not part of spec in v4.0
	| "returned"
	| "signext"
	| "sret"
	| "swifterror"
	| "swiftself"
	| "writeonly" // NOTE: accepted by lli but not part of spec in v4.0
	| "zeroext"
;

FuncAttrs
	: empty
	| FuncAttrList
;

FuncAttrList
	: FuncAttr
	| FuncAttrList FuncAttr
;

// From spec and src of v4.0.
//
// ref: http://llvm.org/docs/LangRef.html#function-attributes
FuncAttr
	: string_lit
	| string_lit "=" string_lit
	| AttrGroupID
	| "alignstack" "(" int_lit ")"
	| "allocsize" "(" int_lit OptAllocSizeNElems ")"
	| "alwaysinline"
	| "argmemonly"
	| "builtin"
	| "cold"
	| "convergent"
	| "inaccessiblemem_or_argmemonly"
	| "inaccessiblememonly"
	| "inlinehint"
	| "jumptable"
	| "minsize"
	| "naked"
	| "nobuiltin"
	| "noduplicate"
	| "noimplicitfloat"
	| "noinline"
	| "nonlazybind"
	| "norecurse"
	| "noredzone"
	| "noreturn"
	| "nounwind"
	| "optnone"
	| "optsize"
	| "readnone"
	| "readonly"
	| "returns_twice"
	| "safestack"
	| "sanitize_address"
	| "sanitize_memory"
	| "sanitize_thread"
	| "ssp"
	| "sspreq"
	| "sspstrong"
	| "uwtable"
	| "writeonly"
;

OptAllocSizeNElems
	: "," int_lit
;

Elems
	: empty
	| ElemList
;

ElemList
	: Elem                << astx.NewConstantList($0) >>
	| ElemList "," Elem   << astx.AppendConstant($0, $2) >>
;

Elem
	: FirstClassType Value   << astx.NewConstant($0, $1) >>
;

OptCallConv
	: empty
	| CallConv
;

// From spec and src of v4.0.
//
// ref: http://llvm.org/docs/LangRef.html#callingconv
CallConv
	: "amdgpu_cs"
	| "amdgpu_gs"
	| "amdgpu_kernel"
	| "amdgpu_ps"
	| "amdgpu_vs"
	| "anyregcc"
	| "arm_aapcs_vfpcc"
	| "arm_aapcscc"
	| "arm_apcscc"
	| "avr_intrcc"
	| "avr_signalcc"
	| "cc" int_lit
	| "ccc"
	| "coldcc"
	| "cxx_fast_tlscc"
	| "fastcc"
	| "ghccc"
	| "hhvm_ccc"
	| "hhvmcc"
	| "intel_ocl_bicc"
	| "msp430_intrcc"
	| "preserve_allcc"
	| "preserve_mostcc"
	| "ptx_device"
	| "ptx_kernel"
	| "spir_func"
	| "spir_kernel"
	| "swiftcc"
	| "webkit_jscc"
	| "x86_64_sysvcc"
	| "x86_64_win64cc"
	| "x86_fastcallcc"
	| "x86_intrcc"
	| "x86_regcallcc"
	| "x86_stdcallcc"
	| "x86_thiscallcc"
	| "x86_vectorcallcc"
;

Labels
	: empty
	| LabelList
;

LabelList
	: Label
	| LabelList "," Label
;

Label
	: LabelType LocalIdent
;

OptInbounds
	: empty
	| "inbounds"
;
