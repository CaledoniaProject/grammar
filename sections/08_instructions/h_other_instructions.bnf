// --- [ Other instructions ] --------------------------------------------------

// ~~~ [ icmp ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

ICmpInst
	: "icmp" IntPred ConcreteType Value "," Value OptCommaAttachedMDList   << astx.NewICmpInst($1, $2, $3, $5, $6) >>
;

IntPred
	: "eq"    << ast.IntEQ, nil >>
	| "ne"    << ast.IntNE, nil >>
	| "ugt"   << ast.IntUGT, nil >>
	| "uge"   << ast.IntUGE, nil >>
	| "ult"   << ast.IntULT, nil >>
	| "ule"   << ast.IntULE, nil >>
	| "sgt"   << ast.IntSGT, nil >>
	| "sge"   << ast.IntSGE, nil >>
	| "slt"   << ast.IntSLT, nil >>
	| "sle"   << ast.IntSLE, nil >>
;

// ~~~ [ fcmp ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

FCmpInst
	: "fcmp" FastMathFlags FloatPred ConcreteType Value "," Value OptCommaAttachedMDList   << astx.NewFCmpInst($2, $3, $4, $6, $7) >>
;

FloatPred
	: "false"   << ast.FloatFalse, nil >>
	| "oeq"     << ast.FloatOEQ, nil >>
	| "ogt"     << ast.FloatOGT, nil >>
	| "oge"     << ast.FloatOGE, nil >>
	| "olt"     << ast.FloatOLT, nil >>
	| "ole"     << ast.FloatOLE, nil >>
	| "one"     << ast.FloatONE, nil >>
	| "ord"     << ast.FloatORD, nil >>
	| "ueq"     << ast.FloatUEQ, nil >>
	| "ugt"     << ast.FloatUGT, nil >>
	| "uge"     << ast.FloatUGE, nil >>
	| "ult"     << ast.FloatULT, nil >>
	| "ule"     << ast.FloatULE, nil >>
	| "une"     << ast.FloatUNE, nil >>
	| "uno"     << ast.FloatUNO, nil >>
	| "true"    << ast.FloatTrue, nil >>
;

// ~~~ [ phi ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

PhiInst
	: "phi" ConcreteType IncomingList OptCommaAttachedMDList   << astx.NewPhiInst($1, $2, $3) >>
;

IncomingList
	: Incoming                    << astx.NewIncomingList($0) >>
	| IncomingList "," Incoming   << astx.AppendIncoming($0, $2) >>
;

Incoming
	: "[" Value "," LocalIdent "]"   << astx.NewIncoming($1, $3) >>
;

// ~~~ [ select ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SelectInst
	: "select" ConcreteType Value "," ConcreteType Value "," ConcreteType Value OptCommaAttachedMDList   << astx.NewSelectInst($1, $2, $4, $5, $7, $8, $9) >>
;

// ~~~ [ call ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

CallInst
	: OptTail "call" FastMathFlags OptCallConv ParamAttrs Type Callee "(" Args ")" FuncAttrs OptCommaAttachedMDList   << astx.NewCallInst($3, $5, $6, $8, $11) >>
;

OptTail
	: empty
	| Tail
;

Tail
	: "tail"
	| "musttail"
	| "notail"
;

Callee
	: Value
	| InlineAsm
;

Args
	: empty
	| ArgList
;

ArgList
	: Arg               << astx.NewValueList($0) >>
	| ArgList "," Arg   << astx.AppendValue($0, $2) >>
;

Arg
	: ConcreteType ParamAttrs Value   << astx.NewValue($0, $2) >>
	| MetadataType MetadataValue      << astx.NewMetadataValue($1) >>
;

// ~~~ [ va_arg ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

VAArgInst
	: "va_arg" ConcreteType Value "," ConcreteType OptCommaAttachedMDList   << nil, nil >>
;

// ~~~ [ landingpad ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

LandingPadInst
	: "landingpad" ConcreteType ClauseList OptCommaAttachedMDList          << nil, nil >>
	| "landingpad" ConcreteType "cleanup" Clauses OptCommaAttachedMDList   << nil, nil >>
;

Clauses
	: empty
	| ClauseList
;

ClauseList
	: Clause
	| ClauseList Clause
;

Clause
	: "catch" ConcreteType Value
	| "filter" ConcreteType ArrayConst
;

// ~~~ [ catchpad ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

CatchPadInst
	: "catchpad" "within" LocalIdent ArrayConst OptCommaAttachedMDList   << nil, nil >>
;

// ~~~ [ cleanuppad ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

CleanupPadInst
	: "cleanuppad" "within" ExceptionParent ArrayConst OptCommaAttachedMDList   << nil, nil >>
;

ExceptionParent
	: "none"
	| LocalIdent
;

