// --- [ Conversion expressions ] ----------------------------------------------

TruncExpr
	: "trunc" "(" ConcreteType Constant "to" ConcreteType ")"   << astx.NewTruncExpr($2, $3, $5) >>
;

ZExtExpr
	: "zext" "(" ConcreteType Constant "to" ConcreteType ")"   << astx.NewZExtExpr($2, $3, $5) >>
;

SExtExpr
	: "sext" "(" ConcreteType Constant "to" ConcreteType ")"   << astx.NewSExtExpr($2, $3, $5) >>
;

FPTruncExpr
	: "fptrunc" "(" ConcreteType Constant "to" ConcreteType ")"   << astx.NewFPTruncExpr($2, $3, $5) >>
;

FPExtExpr
	: "fpext" "(" ConcreteType Constant "to" ConcreteType ")"   << astx.NewFPExtExpr($2, $3, $5) >>
;

FPToUIExpr
	: "fptoui" "(" ConcreteType Constant "to" ConcreteType ")"   << astx.NewFPToUIExpr($2, $3, $5) >>
;

FPToSIExpr
	: "fptosi" "(" ConcreteType Constant "to" ConcreteType ")"   << astx.NewFPToSIExpr($2, $3, $5) >>
;

UIToFPExpr
	: "uitofp" "(" ConcreteType Constant "to" ConcreteType ")"   << astx.NewUIToFPExpr($2, $3, $5) >>
;

SIToFPExpr
	: "sitofp" "(" ConcreteType Constant "to" ConcreteType ")"   << astx.NewSIToFPExpr($2, $3, $5) >>
;

PtrToIntExpr
	: "ptrtoint" "(" ConcreteType Constant "to" ConcreteType ")"   << astx.NewPtrToIntExpr($2, $3, $5) >>
;

IntToPtrExpr
	: "inttoptr" "(" ConcreteType Constant "to" ConcreteType ")"   << astx.NewIntToPtrExpr($2, $3, $5) >>
;

BitCastExpr
	: "bitcast" "(" ConcreteType Constant "to" ConcreteType ")"   << astx.NewBitCastExpr($2, $3, $5) >>
;

AddrSpaceCastExpr
	: "addrspacecast" "(" ConcreteType Constant "to" ConcreteType ")"   << astx.NewAddrSpaceCastExpr($2, $3, $5) >>
;

